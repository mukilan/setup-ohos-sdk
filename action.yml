name: 'Setup OpenHarmony SDK'
description: 'Download an install the OpenHarmony SDK'
inputs:
  version:
    description: 'OpenHarmony SDK release version'
    required: false
    default: '4.1'
  cache:
    description: "Whether to cache the SDK or not"
    required: false
    default: 'true'
  components:
    description: "Semicolon separated list of SDK components that should be made available"
    required: false
    default: 'native'
  fixup-path:
    description: "Whether to fixup the output paths so that the components appear under api level directory"
    required: false
    default: false
outputs:
  sdk-path:
    description: "Directory of the OpenHarmony SDK"
    value: ${{ steps.set_outputs.outputs.sdk-path }}
  ohos_sdk_native:
    description: "The `native` directory inside the OpenHarmony SDK"
    value: ${{ steps.set_outputs.outputs.ohos_sdk_native }}
  sdk-version:
    description: "Specific version of the OpenHarmony SDK (e.g. 4.1.7.5)"
    value: ${{ steps.set_outputs.outputs.sdk-version }}
  api-version:
    description: "OpenHarmony API version of the SDK"
    value: ${{ steps.set_outputs.outputs.api-version }}
runs:
  using: "composite"
  steps:
    - name: Debug
      shell: bash
      run: echo "Cache ${{ inputs.cache }}, version ${{ inputs.version }}"
    - name: Cache SDK
      id: cache
      uses: actions/cache@v4
      with:
        path: ~/ohos-sdk
        key: "${{ runner.os }}-ohos-sdk-${{ inputs.version }}-${{ inputs.components }}"
      if: ${{ inputs.cache == 'true' }}
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
    - name: Download and install OpenHarmony SDK
      id: install_ohos_sdk
      run: install_ohos_sdk.sh
      shell: bash
      if: ${{ inputs.cache != 'true' || steps.cache.outputs.cache-hit != 'true' }}
      env:
        INPUT_VERSION: "${{ inputs.version }}"
        INPUT_COMPONENTS: "${{ inputs.components }}"
    - name: Set Outputs
      id: set_outputs
      shell: bash
      env:
        INPUT_FIXUP_PATH: ${{ inputs.fixup-path }}
      run: |
        echo "sdk-path=$HOME/ohos-sdk" >> "$GITHUB_OUTPUT"
        OHOS_SDK_NATIVE="$(cd $HOME/ohos-sdk/*/native && pwd)"
        cd "${OHOS_SDK_NATIVE}"
        SDK_VERSION="$(jq -r .version < oh-uni-package.json )"
        API_VERSION="$(jq -r .apiVersion < oh-uni-package.json )"
        if [ "${INPUT_FIXUP_PATH}" = "true" ]; then
          OHOS_SDK_NATIVE="$(cd $HOME/ohos-sdk/*/${API_VERSION}/native && pwd)"
        fi
        echo "OHOS_SDK_NATIVE=${OHOS_SDK_NATIVE}" >> "$GITHUB_ENV"
        echo "ohos_sdk_native=${OHOS_SDK_NATIVE}" >> "$GITHUB_OUTPUT"
        echo "sdk-version=${SDK_VERSION}" >> "$GITHUB_OUTPUT"
        echo "api-version=${API_VERSION}" >> "$GITHUB_OUTPUT"

